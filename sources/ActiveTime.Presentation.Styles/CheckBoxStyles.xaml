<!--
ActiveTime
Copyright (C) 2011-2020 Dust in the Wind

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see<http://www.gnu.org/licenses/> .
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Pack://application:,,,/DustInTheWind.ActiveTime.Presentation.Styles;component/CheckBoxIconTemplates.xaml"/>
        <ResourceDictionary Source="Pack://application:,,,/DustInTheWind.ActiveTime.Presentation.Styles;component/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource CheckBoxNormalBackgroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource CheckBoxNormalForegroundColor}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}">

                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource CheckBoxOverBackgroundColor}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="{StaticResource CheckBoxNormalBackgroundColor}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <StackPanel Orientation="Horizontal">

                            <!-- CheckBox Icon -->
                            
                            <ContentControl
                                x:Name="CheckBoxImage"
                                Template="{StaticResource CheckBoxCheckedIconTemplate}"
                                Width="16"
                                Height="16"
                                Margin="0 0 5 0"
                                Foreground="{StaticResource CheckBoxNormalForegroundColor}"
                                Focusable="False"/>

                            <!-- Content -->
                            
                            <ContentPresenter/>

                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- Checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBoxImage" Property="Template" Value="{StaticResource CheckBoxCheckedIconTemplate}"/>
                        </Trigger>

                        <!-- Unchecked -->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckBoxImage" Property="Template" Value="{StaticResource CheckBoxUncheckedIconTemplate}"/>
                        </Trigger>

                        <!-- Checked and Disabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckBoxImage" Property="Template" Value="{StaticResource CheckBoxCheckedIconTemplate}"/>
                            <Setter TargetName="CheckBoxImage" Property="Foreground" Value="{StaticResource CheckBoxDisabledForegroundColor}"/>
                        </MultiTrigger>

                        <!-- Unchecked and Disabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckBoxImage" Property="Template" Value="{StaticResource CheckBoxUncheckedIconTemplate}"/>
                            <Setter TargetName="CheckBoxImage" Property="Foreground" Value="{StaticResource CheckBoxDisabledForegroundColor}"/>
                        </MultiTrigger>

                        <!-- Checked and MouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckBoxImage" Property="Template" Value="{StaticResource CheckBoxCheckedIconTemplate}"/>
                            <Setter TargetName="CheckBoxImage" Property="Foreground" Value="{StaticResource CheckBoxOverForegroundColor}"/>
                        </MultiTrigger>

                        <!-- Unchecked and MouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckBoxImage" Property="Template" Value="{StaticResource CheckBoxUncheckedIconTemplate}"/>
                            <Setter TargetName="CheckBoxImage" Property="Foreground" Value="{StaticResource CheckBoxOverForegroundColor}"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>